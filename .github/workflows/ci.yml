name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

jobs:
  backend-tests:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install backend dependencies
        run: pip install -r requirements.txt

      - name: Run backend tests
        run: pytest tests/ --maxfail=1 --disable-warnings -v

      - name: Lint backend code
        run: |
          pip install flake8
          flake8 app/ --max-line-length=100

  frontend-tests:
    name: Frontend Build, Type-Check, Lint & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false

      - name: Build frontend
        run: npm run build

  deploy-preview:
    name: Deploy Preview on Vercel
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: frontend
