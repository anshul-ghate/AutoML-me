name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run backend tests
        env:
          JWT_SECRET_KEY: test-secret-key-for-ci
        run: |
          python -m pytest tests/ -v --tb=short
          
      - name: Lint backend code
        run: |
          pip install flake8
          flake8 app/ --max-line-length=100 --ignore=E203,W503

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run TypeScript checks
        run: |
          cd frontend
          npm run type-check
          
      - name: Run ESLint
        run: |
          cd frontend
          npm run lint
          
      - name: Run unit tests
        run: |
          cd frontend
          CI=true npm test -- --coverage --watchAll=false --testTimeout=10000
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy-preview:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Preview Comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment would be available at: https://automl-preview.vercel.app'
            })
